{"version":3,"sources":["../../src/MapPicker.tsx","App.js","index.js"],"names":["loadScript","src","id","scripts","document","i","isGoogleMapScriptLoaded","Promise","setTimeout","resolve","script","apiKey","defaultLocation","zoom","onChangeLocation","onChangeZoom","style","className","MAP_VIEW_ID","Math","map","React","marker","currentLocation","location","Google","window","validLocation","isValidLocation","lat","lng","center","position","draggable","event","clickedLocation","handleChangeLocation","componentStyle","Object","width","height","DefaultLocation","App","useState","setDefaultLocation","setLocation","setZoom","handleChangeZoom","newZoom","onClick","type","value","disabled","class","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ed940e9b.chunk.js","sourcesContent":["import React, { FC } from 'react';\r\n\r\nfunction isGoogleMapScriptLoaded(id: string): boolean {\r\n    const scripts: HTMLCollectionOf<HTMLScriptElement> = document.head.getElementsByTagName('script');\r\n    for (let i: number = 0; i < scripts.length; i++) {\r\n        if (scripts[i].getAttribute('id') === id) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction loadScript(src: string, id: string) {\r\n    if (isGoogleMapScriptLoaded(id)) {\r\n        // Make sure the script is loaded\r\n        return new Promise((resolve) => setTimeout(resolve, 500));\r\n    }\r\n\r\n    const script = document.createElement('script');\r\n    script.setAttribute('async', '');\r\n    script.setAttribute('id', id);\r\n    script.src = src;\r\n    (document.querySelector('head') as any).appendChild(script);\r\n\r\n    return new Promise<void>((resolve) => {\r\n        script.onload = () => {\r\n            resolve();\r\n        };\r\n    });\r\n}\r\n\r\ntype Location = {\r\n    lat: number,\r\n    lng: number\r\n}\r\n\r\ntype Props = {\r\n    apiKey: string,\r\n    defaultLocation: Location;\r\n    zoom?: number;\r\n    onChangeLocation?(lat: number, lng: number): void;\r\n    onChangeZoom?(zoom: number): void;\r\n    style?: any;\r\n    className?: string;\r\n}\r\n\r\nfunction isValidLocation(location: Location) {\r\n    return location && Math.abs(location.lat) <= 90 && Math.abs(location.lng) <= 180;\r\n}\r\n\r\nconst GOOGLE_SCRIPT_URL = 'https://maps.googleapis.com/maps/api/js?libraries=places&key=';\r\n\r\nconst MapPicker: FC<Props> = ({ apiKey, defaultLocation, zoom = 7, onChangeLocation, onChangeZoom, style, className }) => {\r\n    const MAP_VIEW_ID = 'google-map-view-' + Math.random().toString(36).substr(2, 9);\r\n    const map = React.useRef<any>(null);\r\n    const marker = React.useRef<any>(null);\r\n\r\n    function handleChangeLocation() {\r\n        if (onChangeLocation) {\r\n            const currentLocation = marker.current.getPosition();\r\n            onChangeLocation(currentLocation.lat(), currentLocation.lng());\r\n        }\r\n    }\r\n\r\n    function handleChangeZoom() {\r\n        onChangeZoom && onChangeZoom(map.current.getZoom());\r\n    }\r\n\r\n    function loadMap() {\r\n        const Google = (window as any).google;\r\n        const validLocation = isValidLocation(defaultLocation) ? defaultLocation : { lat: 0, lng: 0 };\r\n\r\n        map.current = new Google.maps.Map(document.getElementById(MAP_VIEW_ID),\r\n            {\r\n                center: validLocation,\r\n                zoom: zoom\r\n            });\r\n\r\n        if (!marker.current) {\r\n            marker.current = new Google.maps.Marker({\r\n                position: validLocation,\r\n                map: map.current,\r\n                draggable: true\r\n            });\r\n            Google.maps.event.addListener(marker.current, 'dragend', handleChangeLocation);\r\n        } else {\r\n            marker.current.setPosition(validLocation);\r\n        }\r\n\r\n        map.current.addListener('click', function (event: any) {\r\n            const clickedLocation = event.latLng;\r\n\r\n            marker.current.setPosition(clickedLocation);\r\n            handleChangeLocation();\r\n        });\r\n\r\n        map.current.addListener('zoom_changed', handleChangeZoom);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        loadScript(GOOGLE_SCRIPT_URL + apiKey, 'google-maps-' + apiKey).then(loadMap);\r\n    }, [])  // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    React.useEffect(() => {\r\n        if (marker.current) {\r\n            map.current.setCenter(defaultLocation);\r\n            marker.current.setPosition(defaultLocation);\r\n        }\r\n    }, [defaultLocation]);\r\n\r\n    React.useEffect(() => {\r\n        if (map.current) {\r\n            map.current.setZoom(zoom);\r\n        }\r\n    }, [zoom]);\r\n\r\n    const componentStyle = Object.assign({ width: '100%', height: '600px' }, style || {});\r\n\r\n    return (\r\n        <div id={MAP_VIEW_ID} style={componentStyle} className={className}></div>\r\n    );\r\n};\r\nexport default MapPicker;","import React, { useState } from 'react'\r\n\r\nimport MapPicker from 'react-google-map-picker'\r\n\r\nconst DefaultLocation = { lat: 10, lng: 106};\r\nconst DefaultZoom = 10;\r\n\r\nconst App = () => {\r\n\r\n  const [defaultLocation, setDefaultLocation] = useState(DefaultLocation);\r\n\r\n  const [location, setLocation] = useState(defaultLocation);\r\n  const [zoom, setZoom] = useState(DefaultZoom);\r\n\r\n  function handleChangeLocation (lat, lng){\r\n    setLocation({lat:lat, lng:lng});\r\n  }\r\n  \r\n  function handleChangeZoom (newZoom){\r\n    setZoom(newZoom);\r\n  }\r\n\r\n  function handleResetLocation(){\r\n    setDefaultLocation({...DefaultLocation});\r\n    setLocation({...DefaultLocation});\r\n    setZoom(DefaultZoom);\r\n  }\r\n\r\n  return (\r\n    <>\r\n  <button onClick={handleResetLocation}>Reset Location</button>\r\n  <label>Latitute:</label><input type='text' value={location.lat} disabled/>\r\n  <label>Longitute:</label><input type='text' value={location.lng} disabled/>\r\n  <label>Zoom:</label><input type='text' value={zoom} disabled/>\r\n \r\n  <div class=\"row\">\r\n  <div class=\"column\" style=\"background-color:#aaa;\">\r\n    <h2>Map 1</h2>\r\n    <MapPicker defaultLocation={defaultLocation}\r\n    zoom={zoom}\r\n    style={{height:'700px'}}\r\n    onChangeLocation={handleChangeLocation} \r\n    onChangeZoom={handleChangeZoom}\r\n    apiKey='AIzaSyD07E1VvpsN_0FvsmKAj4nK9GnLq-9jtj8'/>\r\n  </div>\r\n  <div class=\"column\" style=\"background-color:#bbb;\">\r\n    <h2>Map 2</h2>\r\n    <MapPicker defaultLocation={defaultLocation}\r\n    zoom={zoom}\r\n    style={{height:'700px'}}\r\n    onChangeLocation={handleChangeLocation} \r\n    onChangeZoom={handleChangeZoom}\r\n    apiKey='AIzaSyD07E1VvpsN_0FvsmKAj4nK9GnLq-9jtj8'/>\r\n  </div>\r\n  </div>\r\n\r\n  </>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}